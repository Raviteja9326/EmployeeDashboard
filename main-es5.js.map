{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/navbar/navbar.component.html","src/app/task1/task1.component.html","src/app/task2/task2.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/material.module.ts","src/app/navbar/navbar.component.css","src/app/navbar/navbar.component.ts","src/app/task1/task1.component.css","src/app/task1/task1.component.ts","src/app/task2/task2.component.scss","src/app/task2/task2.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-navbar>\\n</app-navbar>\\n<router-outlet></router-outlet>\"","export default \"<nav class=\\\"navbar navbar-expand-sm justify-content-center bg-light\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item pr-3\\\">\\n            <a routerLink=\\\"task1\\\">task1</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a routerLink=\\\"task2\\\">task 2</a>\\n        </li>\\n    </ul>\\n</nav>\"","export default \"<div class=\\\"text-center mt-4 mb-4\\\">\\n    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"sor()\\\">{{buttonName}}</button>\\n</div>\\n\\n<div *ngIf=\\\"setting\\\">\\n    <form [formGroup]=\\\"form\\\">\\n        <mat-checkbox *ngFor=\\\"let cd of columnDefinitions\\\" [formControlName]=\\\"cd.def\\\"><span\\n                class=\\\"pr-3\\\">{{cd.label}}</span></mat-checkbox>\\n    </form>\\n</div>\\n<div *ngIf=\\\"!(setting)\\\">\\n    <mat-table class=\\\"mat-elevation-z8\\\" [dataSource]=\\\"dataSource\\\">\\n        <ng-container matColumnDef=\\\"Sno\\\">\\n            <mat-header-cell *matHeaderCellDef> S.no </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.Sno}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Weight Column -->\\n        <ng-container matColumnDef=\\\"DOB\\\">\\n            <mat-header-cell *matHeaderCellDef> Date of Birth </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.DOB}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"gender\\\">\\n            <mat-header-cell *matHeaderCellDef> gender </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.gender}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"address\\\">\\n            <mat-header-cell *matHeaderCellDef> address </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"address1\\\">\\n            <mat-header-cell *matHeaderCellDef> address1 </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.address1}} </mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"address2\\\">\\n            <mat-header-cell *matHeaderCellDef> address2 </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.address2}} </mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"state\\\">\\n            <mat-header-cell *matHeaderCellDef> state </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.state}} </mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"city\\\">\\n            <mat-header-cell *matHeaderCellDef> city </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.city}} </mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"pincode\\\">\\n            <mat-header-cell *matHeaderCellDef> pincode </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.pincode}} </mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"educationaldetails\\\">\\n            <mat-header-cell *matHeaderCellDef> educationaldetails </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.educationaldetails}} </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"getDisplayedColumns()\\\">\\n        </mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: getDisplayedColumns()\\\"></mat-row>\\n    </mat-table>\\n</div>\"","export default \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4 mb-2 order-md-1\\\">\\n            <mat-card>\\n                <mat-card-header class=\\\"float-left\\\">\\n                    <mat-card-title>Paitent Details</mat-card-title>\\n                </mat-card-header>\\n                <mat-card-header class=\\\"float-right\\\">\\n                    <span class=\\\"material-icons pr-2\\\">\\n                        create\\n                    </span>\\n                    <span class=\\\"material-icons\\\">\\n                        add\\n                    </span>\\n                </mat-card-header>\\n\\n                <mat-card-content>\\n                    <form [formGroup]=\\\"patient\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"d-block\\\">\\n                            <mat-label>Name</mat-label>\\n                            <input matInput class=\\\"col-lg-12\\\" formControlName=\\\"names\\\" placeholder=\\\"Placeholder\\\">\\n                            <mat-error *ngIf=\\\"patient.get('names').hasError('required')\\\">\\n                                <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                            </mat-error>\\n                        </mat-form-field>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-4\\\">DOB:<span class=\\\"pl-2\\\">17/11/1991</span></p>\\n                            <p class=\\\"col-lg-4\\\">Age:<span class=\\\"pl-2\\\">22</span></p>\\n                            <p class=\\\"col-lg-4\\\">Gender:<span class=\\\"pl-2\\\">M</span></p>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-4\\\">Ins:<span class=\\\"pl-2\\\">cvsk</span></p>\\n                            <p class=\\\"col-lg-4\\\">Group:<span class=\\\"pl-2\\\">Gca165</span></p>\\n                            <p class=\\\"col-lg-4\\\">Rel:<span class=\\\"pl-2\\\">Child</span></p>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-4\\\">Rel:<span class=\\\"pl-2\\\">Child</span></p>\\n                            <p class=\\\"col-lg-8\\\">Address:<span class=\\\"pl-2\\\">Hyderdad</span></p>\\n                        </div>\\n                    </form>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-lg-8 mb-2 order-md-4\\\">\\n            <mat-card>\\n                <div class=\\\"float-left\\\">\\n                    <mat-card-header>\\n                        <mat-card-title>Rx Details</mat-card-title>\\n                    </mat-card-header>\\n                </div>\\n                <div class=\\\"float-right\\\">\\n                    <mat-card-header>\\n                        <span class=\\\"pr-4\\\" style=\\\"\\n                        position: relative;\\n                        top: 6px;\\n                    \\\">\\n                            <mat-checkbox class=\\\"example-margin\\\">Piorty</mat-checkbox>\\n                        </span>\\n                        <span class=\\\"pr-3\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-3 col-form-label\\\">Orderdate</label>\\n                                <div class=\\\"col-sm-9\\\">\\n                                    <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"Email\\\">\\n                                </div>\\n                            </div>\\n                        </span>\\n                        <span class=\\\"pr-3\\\">\\n                            <div class=\\\"row\\\">\\n                                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-4 col-form-label\\\">Refill Qty</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"\\\">\\n                                </div>\\n                            </div>\\n                        </span>\\n                        <span class=\\\"material-icons\\\">\\n                            add\\n                        </span>\\n                    </mat-card-header>\\n                </div>\\n                <br />\\n                <br />\\n                <br />\\n                <br />\\n                <mat-card-content>\\n                    <p>retails(0)</p>\\n                </mat-card-content>\\n            </mat-card>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12 mt-2 sec order-md-5\\\">\\n                    <mat-card>\\n                        <mat-card-content>\\n                            <form [formGroup]=\\\"retail\\\">\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names1\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names1').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names2\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names2').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names3\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names3').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names4\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names4').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names14\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names14').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names5\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names5').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names6\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names6').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names7\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names7').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names8\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names8').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names9\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names9').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-4\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-lg-8\\\" formControlName=\\\"names10\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names10').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-8\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names11\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names11').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-8\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput class=\\\"col-md-8\\\" formControlName=\\\"names12\\\"\\n                                                    placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retail.get('names12').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                </div>\\n                            </form>\\n                        </mat-card-content>\\n                        <mat-card-content class=\\\"secs\\\" style=\\\"\\n                        background: #f7f7f7;\\n                    \\\">\\n                            <form [formGroup]=\\\"retails\\\">\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names99\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names99').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names98\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names98').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names97\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names97').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names96\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names96').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names95\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names95').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names94\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names94').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names93\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names93').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names92\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names92').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names91\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names91').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names90\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names90').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names89\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names89').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n                                    <p class=\\\"col-lg-6\\\">Bill To<span>\\n                                            <mat-form-field appearance=\\\"outline\\\">\\n                                                <input matInput formControlName=\\\"names88\\\" placeholder=\\\"Cash\\\">\\n                                                <mat-error *ngIf=\\\"retails.get('names88').hasError('required')\\\">\\n                                                    <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                                                </mat-error>\\n                                            </mat-form-field>\\n                                        </span></p>\\n\\n                                </div>\\n                            </form>\\n                        </mat-card-content>\\n\\n                    </mat-card>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4 mb-2 order-md-2\\\">\\n            <mat-card>\\n                <mat-card-header class=\\\"float-left\\\">\\n                    <mat-card-title>Prescriber Details</mat-card-title>\\n                </mat-card-header>\\n                <mat-card-header class=\\\"float-right\\\">\\n                    <span class=\\\"material-icons pr-2\\\">\\n                        create\\n                    </span>\\n                    <span class=\\\"material-icons\\\">\\n                        add\\n                    </span>\\n                </mat-card-header>\\n\\n                <mat-card-content>\\n                    <form [formGroup]=\\\"Prescriber\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"d-block\\\">\\n                            <mat-label>Name</mat-label>\\n                            <input matInput class=\\\"col-lg-12\\\" formControlName=\\\"names\\\" placeholder=\\\"Placeholder\\\">\\n                            <mat-error *ngIf=\\\"Prescriber.get('names').hasError('required')\\\">\\n                                <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                            </mat-error>\\n                        </mat-form-field>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-4\\\">DOB:<span class=\\\"pl-2\\\">17/11/1991</span></p>\\n                            <p class=\\\"col-lg-4\\\">Age:<span class=\\\"pl-2\\\">22</span></p>\\n                            <p class=\\\"col-lg-4\\\">Gender:<span class=\\\"pl-2\\\">M</span></p>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-4\\\">Ins:<span class=\\\"pl-2\\\">cvsk</span></p>\\n                            <p class=\\\"col-lg-4\\\">Group:<span class=\\\"pl-2\\\">Gca165</span></p>\\n                            <p class=\\\"col-lg-4\\\">Rel:<span class=\\\"pl-2\\\">Child</span></p>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-12\\\">Address:<span class=\\\"pl-2\\\">Hyderdad</span></p>\\n                        </div>\\n                    </form>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4 order-md-3\\\">\\n            <mat-card>\\n                <mat-card-header class=\\\"float-left\\\">\\n                    <mat-card-title>Drug Details</mat-card-title>\\n                </mat-card-header>\\n                <mat-card-header class=\\\"float-right\\\">\\n                    <span class=\\\"material-icons pr-2\\\">\\n                        create\\n                    </span>\\n                    <span class=\\\"material-icons\\\">\\n                        add\\n                    </span>\\n                </mat-card-header>\\n\\n                <mat-card-content>\\n                    <form [formGroup]=\\\"Drug\\\">\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"d-block\\\">\\n                            <mat-label>Name</mat-label>\\n                            <input matInput class=\\\"col-lg-12\\\" formControlName=\\\"names\\\" placeholder=\\\"Placeholder\\\">\\n                            <mat-error *ngIf=\\\"Drug.get('names').hasError('required')\\\">\\n                                <sup class=\\\"required\\\" title=\\\"Required\\\">*</sup>Field is Required!\\n                            </mat-error>\\n                        </mat-form-field>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-4\\\">DOB:<span class=\\\"pl-2\\\">17/11/1991</span></p>\\n                            <p class=\\\"col-lg-4\\\">Age:<span class=\\\"pl-2\\\">22</span></p>\\n                            <p class=\\\"col-lg-4\\\">Gender:<span class=\\\"pl-2\\\">M</span></p>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-4\\\">Ins:<span class=\\\"pl-2\\\">cvsk</span></p>\\n                            <p class=\\\"col-lg-4\\\">Group:<span class=\\\"pl-2\\\">Gca165</span></p>\\n                            <p class=\\\"col-lg-4\\\">Rel:<span class=\\\"pl-2\\\">Child</span></p>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <p class=\\\"col-lg-4\\\">Rel:<span class=\\\"pl-2\\\">Child</span></p>\\n                            <p class=\\\"col-lg-4\\\">Address:<span class=\\\"pl-2\\\">Hyderdad</span></p>\\n                            <p class=\\\"col-lg-4\\\">Rel:<span class=\\\"pl-2\\\">Child</span></p>\\n                        </div>\\n                    </form>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Task2Component } from './task2/task2.component';\nimport { Task1Component } from './task1/task1.component';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"task2\", pathMatch: \"full\" },\n  { path: \"task2\", component: Task2Component },\n  { path: \"task1\", component: Task1Component },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kayaksoftware';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { Task2Component } from './task2/task2.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { Task1Component } from './task1/task1.component';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Task2Component,\n    Task1Component,\n    NavbarComponent\n  ],\n  imports: [\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MaterialModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport * as Material from \"@angular/material\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    Material.MatExpansionModule,\r\n    Material.MatCheckboxModule,\r\n    Material.MatStepperModule,\r\n    Material.MatSnackBarModule,\r\n    Material.MatButtonModule,\r\n    Material.MatInputModule,\r\n    Material.MatRippleModule,\r\n    Material.MatFormFieldModule,\r\n    Material.MatTooltipModule,\r\n    Material.MatSelectModule,\r\n    Material.MatAutocompleteModule,\r\n    Material.MatDatepickerModule,\r\n    Material.MatNativeDateModule,\r\n    Material.MatPaginatorModule,\r\n    Material.MatProgressSpinnerModule,\r\n    Material.MatSortModule,\r\n    Material.MatTableModule,\r\n    Material.MatIconModule,\r\n    Material.MatProgressBarModule,\r\n    Material.MatRadioModule,\r\n    Material.MatMenuModule,\r\n    Material.MatCardModule,\r\n    Material.MatListModule\r\n  ],\r\n  exports: [\r\n    Material.MatMenuModule,\r\n    Material.MatCardModule,\r\n    Material.MatListModule,\r\n    Material.MatExpansionModule,\r\n    Material.MatCheckboxModule,\r\n    Material.MatStepperModule,\r\n    Material.MatButtonModule,\r\n    Material.MatInputModule,\r\n    Material.MatRippleModule,\r\n    Material.MatFormFieldModule,\r\n    Material.MatTooltipModule,\r\n    Material.MatSelectModule,\r\n    Material.MatAutocompleteModule,\r\n    Material.MatDatepickerModule,\r\n    Material.MatNativeDateModule,\r\n    Material.MatPaginatorModule,\r\n    Material.MatProgressSpinnerModule,\r\n    Material.MatSortModule,\r\n    Material.MatTableModule,\r\n    Material.MatIconModule,\r\n    Material.MatProgressBarModule,\r\n    Material.MatRadioModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"p {\\r\\n    font-family: Lato;\\r\\n  }\\r\\n  \\r\\n  .example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    max-height: 500px;\\r\\n    min-width: 300px;\\r\\n  }\\r\\n  \\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzazEvdGFzazEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxpQkFBaUI7RUFDbkIiLCJmaWxlIjoic3JjL2FwcC90YXNrMS90YXNrMS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicCB7XHJcbiAgICBmb250LWZhbWlseTogTGF0bztcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWF4LWhlaWdodDogNTAwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xyXG4gIH1cclxuICBcclxuICAubWF0LXRhYmxlIHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgbWF4LWhlaWdodDogNTAwcHg7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Observable, merge } from 'rxjs';\n\nclass Todo {\n  name: string;\n  Sno: string;\n  DOB: string;\n  gender: string;\n  address: string;\n  address1: string;\n  address2: string;\n  state: string;\n  city: string;\n  pincode: number;\n  educationaldetails: string;\n  complete: boolean;\n}\n\n@Component({\n  selector: 'app-task1',\n  templateUrl: './task1.component.html',\n  styleUrls: ['./task1.component.css']\n})\nexport class Task1Component implements AfterViewInit {\n\n  setting = false;\n  buttonName = 'edit';\n  hide: any;\n\n  constructor() {\n    const todos: Todo[] = [{ Sno: '1', name: 'ravi', DOB: \"12-10-15\", gender: 'Male', address: 'hyderbad1', address1: 'hyderbad2', address2: 'hyderbad3', state: \"telangana\", city: \"hyderbad\", pincode: 500085, educationaldetails: \"b.tech\", complete: false },\n    { Sno: '2', name: 'teja', DOB: \"12-10-15\", gender: 'Male', address: 'hyderbad1', address1: 'hyderbad2', address2: 'hyderbad3', state: \"telangana\", city: \"hyderbad\", pincode: 500085, educationaldetails: \"b.tech\", complete: false },\n    { Sno: '3', name: 'sravani', DOB: \"12-10-15\", gender: 'Male', address: 'hyderbad1', address1: 'hyderbad2', address2: 'hyderbad3', state: \"telangana\", city: \"hyderbad\", pincode: 500085, educationaldetails: \"b.tech\", complete: false },\n    { Sno: '4', name: 'rajesh', DOB: \"12-10-15\", gender: 'Male', address: 'hyderbad1', address1: 'hyderbad2', address2: 'hyderbad3', state: \"telangana\", city: \"hyderbad\", pincode: 500085, educationaldetails: \"b.tech\", complete: false },\n    { Sno: '5', name: 'suresh', DOB: \"12-10-15\", gender: 'Male', address: 'hyderbad1', address1: 'hyderbad2', address2: 'hyderbad3', state: \"telangana\", city: \"hyderbad\", pincode: 500085, educationaldetails: \"b.tech\", complete: false },];\n    this.dataSource = new MatTableDataSource(todos);\n  }\n  form: FormGroup = new FormGroup({\n    Sno: new FormControl(false),\n    name: new FormControl(false),\n    DOB: new FormControl(false),\n    gender: new FormControl(false),\n    address: new FormControl(false),\n    address1: new FormControl(false),\n    address2: new FormControl(false),\n    state: new FormControl(false),\n    city: new FormControl(false),\n    pincode: new FormControl(false),\n    educationaldetails: new FormControl(false)\n  });\n\n  Sno = this.form.get('Sno');\n  name = this.form.get('name');\n  DOB = this.form.get('DOB');\n  gender = this.form.get('gender');\n  address = this.form.get('address');\n  address1 = this.form.get('address1');\n  address2 = this.form.get('address2');\n  state = this.form.get('state');\n  city = this.form.get('city');\n  pincode = this.form.get('pincode');\n  educationaldetails = this.form.get('educationaldetails')\n\n  cbValues;\n\n\n  /**\n   * Control column ordering and which columns are displayed.\n   */\n\n  columnDefinitions = [\n    { def: 'Sno', label: 'Sno', hide: this.Sno.value },\n    { def: 'name', label: 'name', hide: this.name.value },\n    { def: 'DOB', label: 'DOB', hide: this.DOB.value },\n    { def: 'gender', label: 'gender', hide: this.gender.value },\n    { def: 'address', label: 'address', hide: this.address.value },\n    { def: 'address1', label: 'address1', hide: this.address1.value },\n    { def: 'address2', label: 'address2', hide: this.address2.value },\n    { def: 'state', label: 'state', hide: this.state.value },\n    { def: 'city', label: 'city', hide: this.city.value },\n    { def: 'pincode', label: 'pincode', hide: this.pincode.value },\n    { def: 'educationaldetails', label: 'educationaldetails', hide: this.educationaldetails.value },\n  ]\n\n  getDisplayedColumns(): string[] {\n    return this.columnDefinitions.filter(cd => !cd.hide).map(cd => cd.def);\n  }\n\n  dataSource: MatTableDataSource<Todo>;\n  ngAfterViewInit() {\n    this.sucess()\n  }\n\n  sucess() {\n    let o1: Observable<boolean> = this.Sno.valueChanges;\n    let o2: Observable<boolean> = this.name.valueChanges;\n    let o3: Observable<boolean> = this.DOB.valueChanges;\n    let o4: Observable<boolean> = this.gender.valueChanges;\n    let o5: Observable<boolean> = this.address.valueChanges;\n    let o6: Observable<boolean> = this.address1.valueChanges;\n    let o7: Observable<boolean> = this.address2.valueChanges;\n    let o8: Observable<boolean> = this.state.valueChanges;\n    let o9: Observable<boolean> = this.city.valueChanges;\n    let o10: Observable<boolean> = this.pincode.valueChanges;\n    let o11: Observable<boolean> = this.educationaldetails.valueChanges;\n\n    merge(o1, o2, o3, o4, o5, o6, o7, o8, o9, o10, o11).subscribe(v => {\n      this.columnDefinitions[0].hide = this.Sno.value;\n      this.columnDefinitions[1].hide = this.name.value;\n      this.columnDefinitions[2].hide = this.DOB.value;\n      this.columnDefinitions[3].hide = this.gender.value;\n      this.columnDefinitions[4].hide = this.address.value;\n      this.columnDefinitions[5].hide = this.address1.value;\n      this.columnDefinitions[6].hide = this.address2.value;\n      this.columnDefinitions[7].hide = this.state.value;\n      this.columnDefinitions[8].hide = this.city.value;\n      this.columnDefinitions[9].hide = this.pincode.value;\n      this.columnDefinitions[10].hide = this.educationaldetails.value;\n      console.log(this.columnDefinitions);\n    });\n  }\n\n  sor() {\n    this.setting = !this.setting\n\n    if (this.setting) {\n      this.buttonName = 'Hide'\n      console.log(this.setting)\n    }\n    else {\n      this.buttonName = 'edit'\n    }\n  }\n}","export default \".mat-card {\\n  background: #ffffff !important;\\n  color: #424242 !important;\\n}\\n\\n@media screen and (min-width: 992px) {\\n  .sec {\\n    position: absolute;\\n  }\\n\\n  .secs {\\n    padding: 10px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzazIvRDpcXGtheWFrc29mdHdhcmUvc3JjXFxhcHBcXHRhc2syXFx0YXNrMi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdGFzazIvdGFzazIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBQTtFQUNBLHlCQUFBO0FDQ0Y7O0FER0E7RUFDRTtJQUNFLGtCQUFBO0VDQUY7O0VEQ0U7SUFDRSxhQUFBO0VDRUo7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3Rhc2syL3Rhc2syLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkIHtcclxuICBiYWNrZ3JvdW5kOiAjZmZmZmZmICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6ICM0MjQyNDIgIWltcG9ydGFudDtcclxufVxyXG5cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcbiAgLnNlY3tcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTt9XHJcbiAgICAuc2Vjc3tcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgIH1cclxufSIsIi5tYXQtY2FyZCB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmYgIWltcG9ydGFudDtcbiAgY29sb3I6ICM0MjQyNDIgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLnNlYyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICB9XG5cbiAgLnNlY3Mge1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, Validators, FormBuilder } from '@angular/forms';\n@Component({\n  selector: 'app-task2',\n  templateUrl: './task2.component.html',\n  styleUrls: ['./task2.component.scss']\n})\nexport class Task2Component implements OnInit {\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  patient = this.formBuilder.group({\n    names: ['', [Validators.required]],\n  })\n  Drug = this.formBuilder.group({\n    names: ['', [Validators.required]],\n  })\n  Prescriber = this.formBuilder.group({\n    names: ['', [Validators.required]],\n  })\n\n  retail = this.formBuilder.group({\n    names: ['', [Validators.required]],\n    names1: ['', [Validators.required]],\n    names2: ['', [Validators.required]],\n    names3: ['', [Validators.required]],\n    names4: ['', [Validators.required]],\n    names5: ['', [Validators.required]],\n    names6: ['', [Validators.required]],\n    names7: ['', [Validators.required]],\n    names8: ['', [Validators.required]],\n    names9: ['', [Validators.required]],\n    names10: ['', [Validators.required]],\n    names11: ['', [Validators.required]],\n    names12: ['', [Validators.required]],\n    names13: ['', [Validators.required]],\n    names14: ['', [Validators.required]],\n  })\n\n  retails = this.formBuilder.group({\n    names99: ['', [Validators.required]],\n    names98: ['', [Validators.required]],\n    names97: ['', [Validators.required]],\n    names96: ['', [Validators.required]],\n    names95: ['', [Validators.required]],\n    names94: ['', [Validators.required]],\n    names93: ['', [Validators.required]],\n    names92: ['', [Validators.required]],\n    names91: ['', [Validators.required]],\n    names90: ['', [Validators.required]],\n    names89: ['', [Validators.required]],\n    names88: ['', [Validators.required]],\n  })\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}